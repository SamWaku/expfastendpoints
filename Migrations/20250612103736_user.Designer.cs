// <auto-generated />
using System;
using ExpFastEnpoints.ExpFastEndpoints.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ExpFastEnpoints.Migrations
{
    [DbContext(typeof(PostgresDatabase))]
    [Migration("20250612103736_user")]
    partial class user
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ExpFastEnpoints.ExpFastEndpoints.Core.Models.CommercialPaper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("company_name");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<double>("InterestRate")
                        .HasColumnType("double precision")
                        .HasColumnName("interest_rate");

                    b.Property<double>("InvestedAmount")
                        .HasColumnType("double precision")
                        .HasColumnName("invested_amount");

                    b.Property<DateTime>("MaturityDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("maturity_date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_date");

                    b.Property<int>("Tenure")
                        .HasColumnType("integer")
                        .HasColumnName("tenure");

                    b.HasKey("Id")
                        .HasName("pk_commercial_paper");

                    b.ToTable("commercial_paper", "public");
                });

            modelBuilder.Entity("ExpFastEnpoints.ExpFastEndpoints.Core.Models.Equity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .HasColumnType("text")
                        .HasColumnName("company");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<int>("OrderType")
                        .HasColumnType("integer")
                        .HasColumnName("order_type");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision")
                        .HasColumnName("quantity");

                    b.Property<double>("SharePrice")
                        .HasColumnType("double precision")
                        .HasColumnName("share_price");

                    b.HasKey("Id")
                        .HasName("pk_equity");

                    b.ToTable("equity", "public");
                });

            modelBuilder.Entity("ExpFastEnpoints.ExpFastEndpoints.Core.Models.FixedTermDeposit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("double precision")
                        .HasColumnName("amount");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<double>("InterestAmount")
                        .HasColumnType("double precision")
                        .HasColumnName("interest_amount");

                    b.Property<double>("InterestRate")
                        .HasColumnType("double precision")
                        .HasColumnName("interest_rate");

                    b.Property<int>("InvestmentHouseId")
                        .HasColumnType("integer")
                        .HasColumnName("investment_house_id");

                    b.Property<double>("MaturityAmount")
                        .HasColumnType("double precision")
                        .HasColumnName("maturity_amount");

                    b.Property<DateOnly>("MaturityDate")
                        .HasColumnType("date")
                        .HasColumnName("maturity_date");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<int>("Tenure")
                        .HasColumnType("integer")
                        .HasColumnName("tenure");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_fixed_term_deposit");

                    b.HasIndex("InvestmentHouseId")
                        .HasDatabaseName("ix_fixed_term_deposit_investment_house_id");

                    b.ToTable("fixed_term_deposit", "public");
                });

            modelBuilder.Entity("ExpFastEnpoints.ExpFastEndpoints.Core.Models.InvestmentHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("CertificateOfIncorporation")
                        .HasColumnType("boolean")
                        .HasColumnName("certificate_of_incorporation");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text")
                        .HasColumnName("company_name");

                    b.Property<string>("CompanyRegistrationNumber")
                        .HasColumnType("text")
                        .HasColumnName("company_registration_number");

                    b.Property<string>("CountryOfIncorporation")
                        .HasColumnType("text")
                        .HasColumnName("country_of_incorporation");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<DateOnly>("DateOfIncorporation")
                        .HasColumnType("date")
                        .HasColumnName("date_of_incorporation");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("text")
                        .HasColumnName("email_address");

                    b.Property<bool?>("Financials")
                        .HasColumnType("boolean")
                        .HasColumnName("financials");

                    b.Property<string>("InstitutionType")
                        .HasColumnType("text")
                        .HasColumnName("institution_type");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("text")
                        .HasColumnName("mobile_number");

                    b.Property<string>("PhysicalAddress")
                        .HasColumnType("text")
                        .HasColumnName("physical_address");

                    b.Property<string>("PostalAddress")
                        .HasColumnType("text")
                        .HasColumnName("postal_address");

                    b.Property<bool?>("TaxClearanceCertificate")
                        .HasColumnType("boolean")
                        .HasColumnName("tax_clearance_certificate");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("telephone_number");

                    b.Property<string>("Tpin")
                        .HasColumnType("text")
                        .HasColumnName("tpin");

                    b.Property<bool?>("TradingLicense")
                        .HasColumnType("boolean")
                        .HasColumnName("trading_license");

                    b.HasKey("Id")
                        .HasName("pk_investment_house");

                    b.ToTable("investment_house", "public");
                });

            modelBuilder.Entity("ExpFastEnpoints.ExpFastEndpoints.Core.Models.SmsInactivity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<int>("Band")
                        .HasColumnType("integer")
                        .HasColumnName("band");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Msisdn")
                        .HasColumnType("text")
                        .HasColumnName("msisdn");

                    b.Property<string>("Text")
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("Id")
                        .HasName("pk_sms_inactivity");

                    b.ToTable("sms_inactivity", "public");
                });

            modelBuilder.Entity("ExpFastEnpoints.ExpFastEndpoints.Core.Models.FixedTermDeposit", b =>
                {
                    b.HasOne("ExpFastEnpoints.ExpFastEndpoints.Core.Models.InvestmentHouse", "InvestmentHouse")
                        .WithMany()
                        .HasForeignKey("InvestmentHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_fixed_term_deposit_investment_house_investment_house_id");

                    b.Navigation("InvestmentHouse");
                });

            modelBuilder.Entity("ExpFastEnpoints.ExpFastEndpoints.Core.Models.InvestmentHouse", b =>
                {
                    b.OwnsMany("ExpFastEnpoints.ExpFastEndpoints.Core.Models.InvestmentHouse+ContactPerson", "ContactPersons", b1 =>
                        {
                            b1.Property<int>("InvestmentHouseId")
                                .HasColumnType("integer")
                                .HasColumnName("investment_house_id");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasColumnName("id");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Email")
                                .HasColumnType("text")
                                .HasColumnName("email");

                            b1.Property<string>("Name")
                                .HasColumnType("text")
                                .HasColumnName("name");

                            b1.Property<string>("Phone")
                                .HasColumnType("text")
                                .HasColumnName("phone");

                            b1.Property<string>("Position")
                                .HasColumnType("text")
                                .HasColumnName("position");

                            b1.HasKey("InvestmentHouseId", "Id")
                                .HasName("pk_contact_person");

                            b1.ToTable("contact_person", "public");

                            b1.WithOwner()
                                .HasForeignKey("InvestmentHouseId")
                                .HasConstraintName("fk_contact_person_investment_house_investment_house_id");
                        });

                    b.OwnsMany("ExpFastEnpoints.ExpFastEndpoints.Core.Models.InvestmentHouse+Director", "Directors", b1 =>
                        {
                            b1.Property<int>("InvestmentHouseId")
                                .HasColumnType("integer")
                                .HasColumnName("investment_house_id");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasColumnName("id");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Email")
                                .HasColumnType("text")
                                .HasColumnName("email");

                            b1.Property<string>("Name")
                                .HasColumnType("text")
                                .HasColumnName("name");

                            b1.Property<string>("Phone")
                                .HasColumnType("text")
                                .HasColumnName("phone");

                            b1.Property<string>("Position")
                                .HasColumnType("text")
                                .HasColumnName("position");

                            b1.HasKey("InvestmentHouseId", "Id")
                                .HasName("pk_director");

                            b1.ToTable("director", "public");

                            b1.WithOwner()
                                .HasForeignKey("InvestmentHouseId")
                                .HasConstraintName("fk_director_investment_house_investment_house_id");
                        });

                    b.Navigation("ContactPersons");

                    b.Navigation("Directors");
                });
#pragma warning restore 612, 618
        }
    }
}
